{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://ideale-eu.eu/schemas/fl/job_spec.schema.json",
  "title": "Federated Learning Job Specification",
  "description": "Schema for federated learning job configurations including training, evaluation, and aggregation jobs",
  "type": "object",
  "required": ["job_metadata", "model_config", "training_config", "orchestration_config", "privacy_config"],
  "properties": {
    "job_metadata": {
      "type": "object",
      "required": ["job_id", "name", "description", "owner", "created_at"],
      "properties": {
        "job_id": {
          "type": "string",
          "pattern": "^fl-[a-z0-9-]+$",
          "description": "Unique job identifier (e.g., fl-pm-engine-oil-2024q4)"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "Human-readable job name"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Detailed description of job purpose and goals"
        },
        "owner": {
          "type": "string",
          "description": "Team or person responsible for the job"
        },
        "contact": {
          "type": "string",
          "format": "email",
          "description": "Contact email for job owner"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp of job creation"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp of last update"
        },
        "status": {
          "type": "string",
          "enum": ["draft", "approved", "active", "completed", "failed", "archived"],
          "description": "Current status of the job"
        },
        "priority": {
          "type": "string",
          "enum": ["low", "medium", "high", "critical"],
          "description": "Job priority level"
        }
      }
    },
    "model_config": {
      "type": "object",
      "required": ["architecture", "version", "input_schema", "output_schema"],
      "properties": {
        "architecture": {
          "type": "string",
          "enum": ["LSTM", "GRU", "Transformer", "CNN", "Autoencoder", "MLP", "ResNet", "Custom"],
          "description": "Model architecture type"
        },
        "framework": {
          "type": "string",
          "enum": ["PyTorch", "TensorFlow", "JAX"],
          "description": "ML framework"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Semantic version of the model"
        },
        "input_schema": {
          "type": "object",
          "description": "Input data schema reference and specifications"
        },
        "output_schema": {
          "type": "object",
          "description": "Output data schema specifications"
        },
        "model_hyperparameters": {
          "type": "object",
          "description": "Architecture-specific hyperparameters"
        }
      }
    },
    "training_config": {
      "type": "object",
      "required": ["algorithm", "hyperparameters", "local_epochs", "batch_size"],
      "properties": {
        "algorithm": {
          "type": "string",
          "enum": ["FedAvg", "FedProx", "FedOpt", "FedYogi", "FedAdam", "SCAFFOLD"],
          "description": "Federated learning algorithm"
        },
        "hyperparameters": {
          "type": "object",
          "required": ["learning_rate", "optimizer"],
          "properties": {
            "learning_rate": {
              "type": "number",
              "minimum": 0.00001,
              "maximum": 1.0,
              "description": "Learning rate for optimization"
            },
            "optimizer": {
              "type": "string",
              "enum": ["Adam", "SGD", "AdaGrad", "RMSprop"],
              "description": "Optimizer type"
            },
            "optimizer_kwargs": {
              "type": "object",
              "description": "Additional optimizer parameters"
            },
            "loss_function": {
              "type": "string",
              "description": "Loss function name"
            }
          }
        },
        "local_epochs": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "description": "Number of local training epochs per round"
        },
        "batch_size": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1024,
          "description": "Training batch size"
        },
        "global_training": {
          "type": "object",
          "properties": {
            "num_rounds": {
              "type": "integer",
              "minimum": 1,
              "description": "Total number of FL rounds"
            },
            "early_stopping": {
              "type": "object",
              "properties": {
                "enabled": {"type": "boolean"},
                "patience": {"type": "integer", "minimum": 1},
                "metric": {"type": "string"},
                "threshold": {"type": "number"}
              }
            }
          }
        }
      }
    },
    "orchestration_config": {
      "type": "object",
      "required": ["schedule", "client_selection", "min_clients", "max_clients"],
      "properties": {
        "schedule": {
          "type": "object",
          "required": ["type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["weekly", "bi_weekly", "on_demand", "cron"],
              "description": "Schedule type"
            },
            "launch_day": {
              "type": "string",
              "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
            },
            "launch_time": {
              "type": "string",
              "pattern": "^\\d{2}:\\d{2}( UTC)?$",
              "description": "Launch time in HH:MM UTC format"
            },
            "cron_expression": {
              "type": "string",
              "description": "Cron expression for advanced scheduling"
            }
          }
        },
        "client_selection": {
          "type": "object",
          "required": ["algorithm"],
          "properties": {
            "algorithm": {
              "type": "string",
              "enum": ["random", "importance_sampling", "active_learning"],
              "description": "Client selection algorithm"
            }
          }
        },
        "min_clients": {
          "type": "integer",
          "minimum": 1,
          "description": "Minimum number of clients required"
        },
        "max_clients": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum number of clients to select"
        },
        "aggregation": {
          "type": "object",
          "properties": {
            "weights": {
              "type": "string",
              "enum": ["num_samples", "uniform", "custom"],
              "description": "Aggregation weight strategy"
            },
            "timeout": {
              "type": "integer",
              "minimum": 1,
              "description": "Aggregation timeout in minutes"
            },
            "min_quorum": {
              "type": "integer",
              "minimum": 1,
              "description": "Minimum clients needed for aggregation"
            }
          }
        }
      }
    },
    "privacy_config": {
      "type": "object",
      "required": ["differential_privacy", "secure_aggregation"],
      "properties": {
        "differential_privacy": {
          "type": "object",
          "required": ["enabled"],
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable differential privacy"
            },
            "mechanism": {
              "type": "string",
              "enum": ["DP-SGD", "DP-FedAvg"],
              "description": "DP mechanism type"
            },
            "epsilon": {
              "type": "number",
              "minimum": 0.01,
              "maximum": 10.0,
              "description": "Privacy budget epsilon"
            },
            "delta": {
              "type": "number",
              "minimum": 0.0,
              "maximum": 0.01,
              "description": "Privacy budget delta"
            },
            "noise_multiplier": {
              "type": "number",
              "minimum": 0.1,
              "description": "Noise multiplier for DP"
            },
            "max_grad_norm": {
              "type": "number",
              "minimum": 0.1,
              "description": "Maximum gradient norm for clipping"
            }
          }
        },
        "secure_aggregation": {
          "type": "object",
          "required": ["enabled"],
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable secure aggregation"
            },
            "protocol": {
              "type": "string",
              "enum": ["threshold_paillier", "MPC"],
              "description": "Secure aggregation protocol"
            },
            "threshold": {
              "type": "integer",
              "minimum": 2,
              "description": "Minimum clients for decryption"
            }
          }
        }
      }
    },
    "deployment_config": {
      "type": "object",
      "properties": {
        "rollout_strategy": {
          "type": "string",
          "enum": ["canary", "blue_green", "progressive"],
          "description": "Deployment rollout strategy"
        },
        "canary_clients": {
          "type": "array",
          "items": {"type": "string"},
          "description": "List of canary client IDs"
        }
      }
    },
    "validation_config": {
      "type": "object",
      "properties": {
        "holdout_dataset": {
          "type": "object",
          "properties": {
            "source": {"type": "string"},
            "size": {"type": "integer", "minimum": 1}
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name"],
            "properties": {
              "name": {"type": "string"},
              "target": {"type": "number"}
            }
          }
        },
        "thresholds": {
          "type": "object",
          "description": "Performance thresholds"
        }
      }
    },
    "compliance_config": {
      "type": "object",
      "properties": {
        "certification_level": {
          "type": "string",
          "enum": ["DO-178C Level A", "DO-178C Level B", "DO-178C Level C", "DO-178C Level D", "none"],
          "description": "Aviation certification level"
        },
        "audit_trail": {
          "type": "boolean",
          "description": "Enable audit trail logging"
        },
        "export_control": {
          "type": "string",
          "enum": ["ITAR", "EAR", "none"],
          "description": "Export control classification"
        }
      }
    }
  }
}
